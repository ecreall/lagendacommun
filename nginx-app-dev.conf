server {
  listen      [::]:80;
  listen      80;
  server_name 6li.eu;
  keepalive_timeout   5;
  # path for static files
  root /etc/nginx/html;
  location / {
    # checks for static file, if not found proxy to app
    try_files $uri @proxy_to_app;
  }
  location @proxy_to_app {
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Request-Start $msec;
    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;
    proxy_pass http://urlshortener;
  }
}

server {
  listen      [::]:80;
  listen      80;
  server_name local.ecreall.com;
  keepalive_timeout   5;
  # path for static files
  root /etc/nginx/html;
  location / {
    # checks for static file, if not found proxy to app
    try_files $uri @proxy_to_app;
  }
  location @proxy_to_app {
    rewrite ^/@@login https://$server_name:8443/@@login permanent;
    rewrite ^/@@registration https://$server_name:8443/@@registration permanent;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Request-Start $msec;
    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;
    proxy_pass http://varnish;
  }
}

server {
  listen      [::]:443 ssl http2;
  listen      443 ssl http2;
  server_name local.ecreall.com;
  ssl_certificate     /etc/nginx/tls/local.ecreall.com.crt;
  ssl_certificate_key /etc/nginx/tls/local.ecreall.com.key;

  keepalive_timeout   5;
  root /etc/nginx/html;
  location /urlshortener {
    proxy_http_version 1.1;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Request-Start $msec;
    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;
    proxy_pass http://urlshortener;
  }
  location / {
    rewrite ^/robots.txt /robots-ssl.txt break;
    # checks for static file, if not found proxy to app
    try_files $uri @proxy_to_app;
  }
  location @proxy_to_app {
    proxy_http_version 1.1;
#    proxy_set_header Upgrade $http_upgrade;
#    proxy_set_header Connection "upgrade";
#    proxy_buffering off;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Request-Start $msec;
    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;
    proxy_pass http://varnish;
  }
}


server {
  listen      [::]:80;
  listen      80;
  server_name local2.ecreall.com;
  keepalive_timeout   5;
  root /etc/nginx/html;
  location / {
    # checks for static file, if not found proxy to app
    try_files $uri @proxy_to_app;
  }
  location @proxy_to_app {
    rewrite ^/@@login https://$server_name:8443/@@login permanent;
    rewrite ^/@@registration https://$server_name:8443/@@registration permanent;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Request-Start $msec;
    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;
    proxy_pass http://varnish;
  }
}


server {
  listen      [::]:443 ssl http2;
  listen      443 ssl http2;
  server_name local2.ecreall.com;
  ssl_certificate     /etc/nginx/tls/local2.ecreall.com.crt;
  ssl_certificate_key /etc/nginx/tls/local2.ecreall.com.key;

  keepalive_timeout   5;
  root /etc/nginx/html;
  location / {
    rewrite ^/robots.txt /robots-ssl.txt break;
    # checks for static file, if not found proxy to app
    try_files $uri @proxy_to_app;
  }
  location @proxy_to_app {
    proxy_http_version 1.1;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Request-Start $msec;
    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;
    proxy_pass http://varnish;
  }
}

upstream varnish {
  server app:5000;
}

upstream urlshortener {
  server urlshortener:5000;
}
